# Docker image for Zephyr development with Espressif targets (e.g. ESP32)

# Settings
ARG ZEPHYR_CI_IMAGE_VERSION=0.26.15
# Zephyr 3.7.0 is not working with ESP32S3, see: https://github.com/zephyrproject-rtos/zephyr/issues/71397
#ARG ZEPHYR_RTOS_VERSION=3.7.0
ARG ZEPHYR_RTOS_COMMIT=7e9fb8b51fd9c40bf6673d6a82a612491a27548a
ARG ZEPHYR_SDK_VERSION=0.16.8
ARG WGET_ARGS="-q --show-progress --progress=bar:force:noscroll"

#-------------------------------------------------------------------------------
# Base Image and Dependencies

# User the Zephyr CI base image
FROM zephyrprojectrtos/ci-base:v${ZEPHYR_CI_IMAGE_VERSION}

# Redeclare arguments after FROM
ARG ZEPHYR_RTOS_VERSION
ARG ZEPHYR_SDK_VERSION
ARG WGET_ARGS

# Install dependencies
RUN apt-get update && \
	apt-get install -y \
		python3-venv \
		vim \
		nano \
		mc

# Set up directories
RUN mkdir -p /workspace/ && \
	mkdir -p /opt/toolchains

#-------------------------------------------------------------------------------
# Zephyr Toolchain

# Set Zephyr environment variables
ENV ZEPHYR_RTOS_VERSION=${ZEPHYR_RTOS_VERSION}
ENV ZEPHYR_SDK_VERSION=${ZEPHYR_SDK_VERSION}

# Install Zephyr
RUN cd /opt/toolchains && \
	git clone https://github.com/zephyrproject-rtos/zephyr.git && \
	cd zephyr && \
	git checkout ${ZEPHYR_RTOS_COMMIT} && \
	pip3 install -r scripts/requirements.txt

# Instantiate west workspace and install tools
RUN cd /opt/toolchains && \
	west init -l zephyr && \
	west update && \
	west blobs fetch hal_espressif
	
# Install Zephyr SDK
RUN cd /opt/toolchains && \
	wget ${WGET_ARGS} https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v${ZEPHYR_SDK_VERSION}/zephyr-sdk-${ZEPHYR_SDK_VERSION}_linux-${HOSTTYPE}.tar.xz && \
	tar xf zephyr-sdk-${ZEPHYR_SDK_VERSION}_linux-${HOSTTYPE}.tar.xz && \
	zephyr-sdk-${ZEPHYR_SDK_VERSION}/setup.sh -t all -h -c && \
	rm zephyr-sdk-${ZEPHYR_SDK_VERSION}_linux-${HOSTTYPE}.tar.xz

#-------------------------------------------------------------------------------
# Entrypoint

# Create entrypoint script that activates the Zephyr env and opens a bash shell
RUN echo -e '#!/bin/bash\nsource /opt/toolchains/zephyr/zephyr-env.sh\nexec /bin/bash' > /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Set the entrypoint script
ENTRYPOINT ["/entrypoint.sh"]
CMD []
